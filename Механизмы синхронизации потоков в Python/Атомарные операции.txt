Простейший способ синхронизации с общими переменными или другими ресурсами, это положиться на атомарные операции в интерпретаторе. Атомарная операция – это операция, которая осуществляет только один этап выполнения задачи, без каких либо шансов того, что другой поток получит контроль. В целом, такой подход работает, если общий ресурс состоит из одного экземпляра данных корневого типа, типа переменной строки, числа, словаря или списка. Вот пример нескольких безопасных операций:

    Чтение или замена экземпляра атрибута;
    Чтение или замена глобальной переменной;
    Выборка элемента из списка;
    Модификация списка на месте (другими словами, добавление объекта при помощи append);
    Выборка объекта в словаре;
    Модификация словаря на месте (другими словами, добавление объекта или вызов метода clear)

Обратите внимание на то, что как было сказано ранее, операции, которые считывают переменную или атрибут, модифицируют, после чего вписывают обратно, не являются защищенными от потоков. Другой поток может обновить переменную после того, как она уже была прочтена текущим потоком, а перед этим обновлена. Также обратите внимание на то, что код Python может быть выполнен, когда объекты разрушены, так что даже простая, на первый взгляд операция может спровоцировать другие потоки на действия, что может повести за собой конфликты. Если вы сомневаетесь, то используйте блокировки.